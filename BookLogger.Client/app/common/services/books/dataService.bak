(function () {
    'use strict';

    var serviceId = "dataService";

    angular
        .module("App.Common.Services")
        .factory(serviceId, FactoryFn);

    FactoryFn.$inject = [
        "$q",
        "$timeout",
        "logger"
    ]

    function FactoryFn($q, $timeout, logger) {

        return {
            getAllBooks: getAllBooksFn,
            getAllReaders: getAllReadersFn
        }

        function getAllBooksFn() {

            logger.out("Geeting all Books");

            var booksArray = [
                 {
                     "book_id": 1,
                     "title": "Goodnight Moon",
                     "author": "Margaret Wise Brown",
                     "yearPublished": "1953"
                 },
                {
                    "book_id": 2,
                    "title": "Green Eggs and Ham",
                    "author": "Dr. Seuss",
                    "yearPublished": "1960"
                },
                {
                    "book_id": 3,
                    "title": "Where the Wild Things Are",
                    "author": "Maurice Sendak",
                    "yearPublished": "1963"
                }
            ];

            var deferred = $q.defer();

            $timeout(function () {

                var successful = true;

                deferred.notify("Just getting started gathering books...");
                deferred.notify("Almost done gathering books...");

                if (successful) {
                    deferred.resolve(booksArray);
                }
                else {
                    deferred.reject('Error retrieving books');
                }

            }, 1000);

            return deferred.promise;
        }

        function getAllReadersFn() {

            logger.out("Geeting all Readers");

            var readersArray = [
                {
                    "reader_id": 1,
                    "name": "Marie",
                    "weeklyReadingGoal": 400,
                    "totalMinutesRead": 5600
                },
                {
                    "reader_id": 2,
                    "name": "Daniel",
                    "weeklyReadingGoal": 210,
                    "totalMinutesRead": 3000
                },
                {
                    "reader_id": 3,
                    "name": "Lanier",
                    "weeklyReadingGoal": 140,
                    "totalMinutesRead": 600
                }
            ]


            var deferred = $q.defer();

            $timeout(function () {

                var successful = true;

                deferred.notify("Just getting started gathering readers...");
                deferred.notify("Almost done gathering readers...");

                if (successful) {
                    deferred.resolve(readersArray);
                }
                else {
                    deferred.reject('Error retrieving books');
                }

            }, 1500);

            return deferred.promise;
        }
    }

})()